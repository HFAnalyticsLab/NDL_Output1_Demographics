dplyr::rename(.,Count=Patient.Count.Sex,Partner=LA.Name,n_known=Patient.Count,Breakdown_Value=Breakdown.Value) %>%
mutate(.,Breakdown_Field="sex",n=n_known) %>%
mutate(.,Breakdown_Value=tolower(Breakdown_Value))
### Age
open.england.age <- filter(SPL_by_LA_agegroup,LA.Name=="ENGLAND") %>%
select(.,LA.Name,Breakdown.Value,Patient.Count.Age,Patient.Count) %>%
dplyr::rename(.,Count=Patient.Count.Age,Partner=LA.Name,n_known=Patient.Count,Breakdown_Value=Breakdown.Value) %>%
mutate(.,Breakdown_Field="age_band",n=n_known) %>%
mutate(.,Breakdown_Value=tolower(Breakdown_Value))
#80 or more
nr_80_plus <- open.england.age %>% mutate(.,`80plus`=ifelse(Breakdown_Value=="80-89"|Breakdown_Value=="90+",1,0)) %>%
filter(.,`80plus`==1) %>% select(.,Count) %>% sum(.)
nr_80_plus_row <- filter(open.england.age,Breakdown_Value=="90+") %>%
mutate(.,Breakdown_Value="80+",Count=nr_80_plus)
#0 to 29
nr_under_30 <- open.england.age %>% mutate(.,`under30`=ifelse(Breakdown_Value=="0-17"|Breakdown_Value=="18-29",1,0)) %>%
filter(.,`under30`==1) %>% select(.,Count) %>% sum(.)
nr_under30_row <- filter(open.england.age,Breakdown_Value=="90+") %>%
mutate(.,Breakdown_Value="0-29",Count=nr_under_30)
#Append
open.england.age <- rbind.fill(open.england.age,nr_80_plus_row,nr_under30_row)
#Changes to NDL data to accommodate Open Data comparison
all_partners_under30 <- all_partners %>%
mutate(.,`under30`=ifelse(Breakdown_Field=="age_band"&(Breakdown_Value=="0-19"|Breakdown_Value=="20-29"),1,0),
Count=as.numeric(Count)) %>%
filter(.,under30==1) %>% as.data.table()
all_partners_under30 <- all_partners_under30[, list(Breakdown_Value="0-29", Count = sum(Count), n = first(n),
n_known= first(n_known)),
by = list(Partner,Breakdown_Field)]
all_partners <- rbind.fill(all_partners,all_partners_under30)
#filter(all_partners,Breakdown_Field=="age_band")
### Append all
all_partners_and_open <- rbind.fill(all_partners,open.england.reason,open.england.age,open.england.sex)
all_partners_and_open <- arrange(all_partners_and_open, Partner, Breakdown_Field)
################################################
################### Clean data #################
################################################
### Remove rows for totals
all_partners_clean <- all_partners_and_open %>% filter(.,!str_detect(Breakdown_Value, "total"))
### Remove results lost to SDC
all_partners_clean <- all_partners_clean %>%
mutate(Count = gsub("\\*", "", Count))
all_partners_clean$Count[grepl("<", all_partners_clean$Count, fixed = TRUE)] <- NA
### Compute rates
all_partners_clean <- all_partners_clean %>%
mutate(.,Count=as.numeric(Count),n=as.numeric(n),n_known=as.numeric(n_known),
var1.n=as.numeric(var1.n),var2.n=as.numeric(var2.n)) %>%
mutate(.,rate_all=Count/n*100,rate_known=Count/n_known*100) %>%
mutate(.,interaction_rate_v1=Count/var1.n*100,interaction_rate_v2=Count/var2.n*100)
##########################################
################### Save #################
##########################################
fwrite(all_partners_clean, file = paste0(rawdatadir,"allpartners-demographics-clean.csv"), sep = ",")
pop_by_LA
filter(pop_by_LA,LAD19NM=="WALES")$pop19
SPL_by_LA_Wales_All
pop_wales <- filter(pop_by_LA,LAD19NM=="WALES")$pop19
pct_wales <- filter(SPL_by_LA_Wales_All,LA.Name=="Wales")$Patient.Count/pop_wales*100
pct_wales
#Chart data
rate_by_partner_chart_data <- rbind.data.frame(
c("Liverpool-Wirral",pct_shielding_liverpool_wirral_opendata,pop_shielding_liverpool_wirral_opendata,pop_liverpool_wirral),
c("North West England",filter(SPL_by_GOR_wEng,RGN19NM=="North West")$Shielders_pct,sum(filter(SPL_by_LA_All,RGN19NM=="North West")$Patient.Count),filter(pop_by_LA,LAD19NM=="NORTH WEST")$pop19),
c("England",filter(SPL_by_GOR_wEng,RGN19NM=="England")$Shielders_pct,filter(SPL_by_LA_All_incl_ENG,LA.Name=="ENGLAND")$Patient.Count,filter(pop_by_LA,LAD19NM=="ENGLAND")$pop19),
c("Grampian",pct_shielding_grampian_NDL,pop_shielding_grampian_NDL,pop_grampian),
c("Scotland",filter(SPL_by_GOR_wEng,RGN19NM=="Scotland")$Shielders_pct,179997,filter(pop_by_LA,LAD19NM=="SCOTLAND")$pop19),
c("Wales",pct_wales,filter(SPL_by_LA_Wales_All,LA.Name=="Wales")$Patient.Count,pop_wales)
)
names(rate_by_partner_chart_data) <- c("Location","Rate","numerator","denominator")
#Clean up the global environment
rm(list = ls())
#Git directory
gitdir <- dirname(rstudioapi::getSourceEditorContext()$path)
#Set directory where inputs are saved
rawdatadir <- "M:/Analytics/Networked Data Lab/Partner outputs/Output 1 Demographics/"
opendatadir <- "M:/Analytics/Networked Data Lab/COVID19_Shielding/"
popdatadir <- "M:/Analytics/Networked Data Lab/Shielding/"
graphsdir <- "M:/Analytics/Networked Data Lab/Partner outputs/Output 1 Demographics/Charts/"
##################################################
################### Load clean data ##############
##################################################
#Partner data
allpartners.demographics.clean <- fread(paste0(rawdatadir,"allpartners-demographics-clean.csv"), header=TRUE, sep=",", check.names=T)
#Population data
pop_by_LA <- fread(paste0(opendatadir,"Clean data/","pop_by_LA.csv"), header=TRUE, sep=",", check.names=T)
pop_by_CCG <- read_excel(paste0(popdatadir,"Other data/Mid-year population estimates/CCG/sape22dt6amid2019ccg2020estimatesunformatted/","SAPE22DT6a-mid-2019-ccg-2020-estimates-unformatted.xlsx"),
sheet = "Mid-2019 Persons",skip=6) %>% filter(.,!is.na(`CCG Code`))
pop_by_scottish_board <- read_excel(paste0(popdatadir,"Other data/Mid-year population estimates/Scotland/","mid-year-pop-est-19-data.xlsx"),
sheet = "Table 2",range="A40:CQ54")
#Other open data (SPL)
SPL_by_LA_dgroup_dep <- fread(paste0(opendatadir,"Clean data/","SPL_by_LA_dgroup_dep.csv"), header=TRUE, sep=",", check.names=T)
SPL_by_LA_dgroup <- fread(paste0(opendatadir,"Clean data/","SPL_by_LA_dgroup.csv"), header=TRUE, sep=",", check.names=T)
SPL_by_LA_agegroup <- fread(paste0(opendatadir,"Clean data/","SPL_by_LA_agegroup.csv"), header=TRUE, sep=",", check.names=T)
SPL_by_LA <- fread(paste0(opendatadir,"Clean data/","SPL_by_LA.csv"), header=TRUE, sep=",", check.names=T)
SPL_by_LA_All <- fread(paste0(opendatadir,"Clean data/","SPL_by_LA_All.csv"), header=TRUE, sep=",", check.names=T)
SPL_by_LA_All_incl_ENG <- fread(paste0(opendatadir,"Clean data/","SPL_by_LA_All_incl_ENG.csv"), header=TRUE, sep=",", check.names=T)
SPL_by_LA_Wales_All <- fread(paste0(opendatadir,"Clean data/","SPL_by_LA_Wales_All.csv"), header=TRUE, sep=",", check.names=T)
SPL_by_LA_gender <- fread(paste0(opendatadir,"Clean data/","SPL_by_LA_gender.csv"), header=TRUE, sep=",", check.names=T)
#Other open data (SPL by CCG)
SPL_by_CCG <- fread(paste0(popdatadir,"SPL/England/November/","Coronavirus Shielded Patient List, England - Open Data with CMO DG - CCG - 2020-11-06 v2.csv"), header=TRUE, sep=",", check.names=T)
#Other open data (summary tables)
SPL_by_GOR_wEng <- fread(paste0(graphsdir,"SPL_by_GOR_wEng (October).csv"), header=TRUE, sep=",", check.names=T)
LiverpoolWirral_depquint <- fread(paste0(rawdatadir,"opendata-demographics.csv"), header=TRUE, sep=",", check.names=T)
LiverpoolWirral_agedepquint <- fread(paste0(rawdatadir,"opendata-demographics-interactions.csv"), header=TRUE, sep=",", check.names=T)
###############################################
################### Shielding rate ############
###############################################
#Liverpool-Wirral
pop_liverpool_wirral <- pop_by_CCG %>% filter(., `CCG Name` %in% c("NHS Liverpool CCG","NHS Wirral CCG")) %>%
select(.,`All Ages`) %>% sum(.,na.rm=TRUE)
pop_shielding_liverpool_wirral_opendata <- SPL_by_CCG %>% filter(.,Breakdown.Field=="ALL"&(CCG.Name %in% c("NHS Liverpool CCG","NHS Wirral CCG"))) %>%
select(.,Patient.Count) %>% mutate(.,Patient.Count=as.numeric(Patient.Count)) %>% sum(.,na.rm=TRUE)
pop_shielding_liverpool_wirral_NDL <- allpartners.demographics.clean %>% filter(.,Partner=="LiverpoolWirral") %>% select(.,n) %>% min(.,na.rm=TRUE)
pct_shielding_liverpool_wirral_opendata <- pop_shielding_liverpool_wirral_opendata/pop_liverpool_wirral*100
#Grampian-Aberdeen
pop_grampian <- pop_by_scottish_board %>% filter(., `NHS Board areas` %in% c("Grampian")) %>%
select(.,`...3`) %>% as.numeric()
pop_shielding_grampian_NDL <- 14773
pct_shielding_grampian_NDL <- pop_shielding_grampian_NDL/pop_grampian*100
#Wales
pop_wales <- filter(pop_by_LA,LAD19NM=="WALES")$pop19
pct_wales <- filter(SPL_by_LA_Wales_All,LA.Name=="Wales")$Patient.Count/pop_wales*100
#Chart data
rate_by_partner_chart_data <- rbind.data.frame(
c("Liverpool-Wirral",pct_shielding_liverpool_wirral_opendata,pop_shielding_liverpool_wirral_opendata,pop_liverpool_wirral),
c("North West England",filter(SPL_by_GOR_wEng,RGN19NM=="North West")$Shielders_pct,sum(filter(SPL_by_LA_All,RGN19NM=="North West")$Patient.Count),filter(pop_by_LA,LAD19NM=="NORTH WEST")$pop19),
c("England",filter(SPL_by_GOR_wEng,RGN19NM=="England")$Shielders_pct,filter(SPL_by_LA_All_incl_ENG,LA.Name=="ENGLAND")$Patient.Count,filter(pop_by_LA,LAD19NM=="ENGLAND")$pop19),
c("Grampian",pct_shielding_grampian_NDL,pop_shielding_grampian_NDL,pop_grampian),
c("Scotland",filter(SPL_by_GOR_wEng,RGN19NM=="Scotland")$Shielders_pct,179997,filter(pop_by_LA,LAD19NM=="SCOTLAND")$pop19),
c("Wales",pct_wales,filter(SPL_by_LA_Wales_All,LA.Name=="Wales")$Patient.Count,pop_wales)
)
names(rate_by_partner_chart_data) <- c("Location","Rate","numerator","denominator")
rate_by_partner_chart_data
rate_by_partner_chart_data <- rate_by_partner_chart_data %>%
arrange(.,desc(Rate)) %>%
mutate(.,Rate=as.numeric(Rate))
rate_by_partner_chart_data
#Chart
rate_by_partner_chart <- ggplot(rate_by_partner_chart_data) +
geom_bar(aes(x=reorder(Location,Rate), y = Rate),
fill = "firebrick",stat='identity') +
geom_text(aes(x = Location, y = Rate + 0.3,
label = paste0(round(Rate, 1),"%")),
size=5) +
theme(axis.title.x = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x=element_text(angle=45, hjust=1),axis.text.y=element_blank(),
axis.ticks.y=element_blank(),axis.ticks.x=element_blank(),
panel.background = element_blank(),
text = element_text(size = 15)) +
labs(title="% residents shielding",y = " ",x="")
windows()
rate_by_partner_chart
knitr::opts_chunk$set(echo = TRUE)
#Load packages
if (!require("pacman")) install.packages("pacman")
pacman::p_load(dplyr,stringr,sp,ggplot2,plyr,readODS,
gmodels,Rmisc,DescTools,data.table,
Hmisc,tibble,leaflet,rgeos,raster,plotly,
pbapply,pbmcapply,here,rgdal,RColorBrewer,ggthemes,
ggchicklet,tidyverse,showtext,ggchicklet,readxl)
#Set directory where inputs are saved
rawdatadir <- "M:/Analytics/Networked Data Lab/Partner outputs/Output 1 Demographics/"
opendatadir <- "M:/Analytics/Networked Data Lab/COVID19_Shielding/"
popdatadir <- "M:/Analytics/Networked Data Lab/Shielding/"
graphsdir <- "M:/Analytics/Networked Data Lab/Partner outputs/Output 1 Demographics/Charts/"
#Partner data
allpartners.demographics.clean <- fread(paste0(rawdatadir,"allpartners-demographics-clean.csv"), header=TRUE, sep=",", check.names=T)
#Population data
pop_by_LA <- fread(paste0(opendatadir,"Clean data/","pop_by_LA.csv"), header=TRUE, sep=",", check.names=T)
pop_by_CCG <- read_excel(paste0(popdatadir,"Other data/Mid-year population estimates/CCG/sape22dt6amid2019ccg2020estimatesunformatted/","SAPE22DT6a-mid-2019-ccg-2020-estimates-unformatted.xlsx"),
sheet = "Mid-2019 Persons",skip=6) %>% filter(.,!is.na(`CCG Code`))
pop_by_scottish_board <- read_excel(paste0(popdatadir,"Other data/Mid-year population estimates/Scotland/","mid-year-pop-est-19-data.xlsx"),
sheet = "Table 2",range="A40:CQ54")
#Other open data (SPL)
SPL_by_LA_dgroup_dep <- fread(paste0(opendatadir,"Clean data/","SPL_by_LA_dgroup_dep.csv"), header=TRUE, sep=",", check.names=T)
SPL_by_LA_dgroup <- fread(paste0(opendatadir,"Clean data/","SPL_by_LA_dgroup.csv"), header=TRUE, sep=",", check.names=T)
SPL_by_LA_agegroup <- fread(paste0(opendatadir,"Clean data/","SPL_by_LA_agegroup.csv"), header=TRUE, sep=",", check.names=T)
SPL_by_LA <- fread(paste0(opendatadir,"Clean data/","SPL_by_LA.csv"), header=TRUE, sep=",", check.names=T)
SPL_by_LA_All <- fread(paste0(opendatadir,"Clean data/","SPL_by_LA_All.csv"), header=TRUE, sep=",", check.names=T)
SPL_by_LA_All_incl_ENG <- fread(paste0(opendatadir,"Clean data/","SPL_by_LA_All_incl_ENG.csv"), header=TRUE, sep=",", check.names=T)
SPL_by_LA_Wales_All <- fread(paste0(opendatadir,"Clean data/","SPL_by_LA_Wales_All.csv"), header=TRUE, sep=",", check.names=T)
SPL_by_LA_gender <- fread(paste0(opendatadir,"Clean data/","SPL_by_LA_gender.csv"), header=TRUE, sep=",", check.names=T)
#Other open data (SPL by CCG)
SPL_by_CCG <- fread(paste0(popdatadir,"SPL/England/November/","Coronavirus Shielded Patient List, England - Open Data with CMO DG - CCG - 2020-11-06 v2.csv"), header=TRUE, sep=",", check.names=T)
#Other open data (summary tables)
SPL_by_GOR_wEng <- fread(paste0(graphsdir,"SPL_by_GOR_wEng (October).csv"), header=TRUE, sep=",", check.names=T)
LiverpoolWirral_depquint <- fread(paste0(rawdatadir,"opendata-demographics.csv"), header=TRUE, sep=",", check.names=T)
LiverpoolWirral_agedepquint <- fread(paste0(rawdatadir,"opendata-demographics-interactions.csv"), header=TRUE, sep=",", check.names=T)
#Liverpool-Wirral
pop_liverpool_wirral <- pop_by_CCG %>% filter(., `CCG Name` %in% c("NHS Liverpool CCG","NHS Wirral CCG")) %>%
select(.,`All Ages`) %>% sum(.,na.rm=TRUE)
pop_shielding_liverpool_wirral_opendata <- SPL_by_CCG %>% filter(.,Breakdown.Field=="ALL"&(CCG.Name %in% c("NHS Liverpool CCG","NHS Wirral CCG"))) %>%
select(.,Patient.Count) %>% mutate(.,Patient.Count=as.numeric(Patient.Count)) %>% sum(.,na.rm=TRUE)
pop_shielding_liverpool_wirral_NDL <- allpartners.demographics.clean %>% filter(.,Partner=="LiverpoolWirral") %>% select(.,n) %>% min(.,na.rm=TRUE)
pct_shielding_liverpool_wirral_opendata <- pop_shielding_liverpool_wirral_opendata/pop_liverpool_wirral*100
#Grampian-Aberdeen
pop_grampian <- pop_by_scottish_board %>% filter(., `NHS Board areas` %in% c("Grampian")) %>%
select(.,`...3`) %>% as.numeric()
pop_shielding_grampian_NDL <- 14773
pct_shielding_grampian_NDL <- pop_shielding_grampian_NDL/pop_grampian*100
#Wales
pop_wales <- filter(pop_by_LA,LAD19NM=="WALES")$pop19
pct_wales <- filter(SPL_by_LA_Wales_All,LA.Name=="Wales")$Patient.Count/pop_wales*100
#Chart data
rate_by_partner_chart_data <- rbind.data.frame(
c("Liverpool-Wirral",pct_shielding_liverpool_wirral_opendata,pop_shielding_liverpool_wirral_opendata,pop_liverpool_wirral),
c("North West England",filter(SPL_by_GOR_wEng,RGN19NM=="North West")$Shielders_pct,sum(filter(SPL_by_LA_All,RGN19NM=="North West")$Patient.Count),filter(pop_by_LA,LAD19NM=="NORTH WEST")$pop19),
c("England",filter(SPL_by_GOR_wEng,RGN19NM=="England")$Shielders_pct,filter(SPL_by_LA_All_incl_ENG,LA.Name=="ENGLAND")$Patient.Count,filter(pop_by_LA,LAD19NM=="ENGLAND")$pop19),
c("Grampian",pct_shielding_grampian_NDL,pop_shielding_grampian_NDL,pop_grampian),
c("Scotland",filter(SPL_by_GOR_wEng,RGN19NM=="Scotland")$Shielders_pct,179997,filter(pop_by_LA,LAD19NM=="SCOTLAND")$pop19),
c("Wales",pct_wales,filter(SPL_by_LA_Wales_All,LA.Name=="Wales")$Patient.Count,pop_wales)
)
names(rate_by_partner_chart_data) <- c("Location","Rate","numerator","denominator")
rate_by_partner_chart_data <- rate_by_partner_chart_data %>%
arrange(.,desc(Rate)) %>%
mutate(.,Rate=as.numeric(Rate))
#Chart
rate_by_partner_chart <- ggplot(rate_by_partner_chart_data) +
geom_bar(aes(x=reorder(Location,Rate), y = round(Rate,1)),
fill = "firebrick",stat='identity') +
geom_text(aes(x = Location, y = Rate + 0.3,
label = paste0(round(Rate, 1),"%")),
size=4) +
theme(axis.title.x = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x=element_text(angle=45, hjust=1),axis.text.y=element_blank(),
axis.ticks.y=element_blank(),axis.ticks.x=element_blank(),
panel.background = element_blank(),
text = element_text(size = 10)) +
labs(title="% residents shielding",y = " ",x="")
ggplotly(rate_by_partner_chart)
age_band_chart_data <- filter(allpartners.demographics.clean,Breakdown_Field=="age_band") %>%
filter(.,!(Breakdown_Value %in% c("90+","0-19","20-29","0-17","18-29","80-89")))
cols8 <- c(brewer.pal(n = 7, name = "Greens"),"#bdbdbd")
by_age_band_chart <- ggplot(age_band_chart_data,
aes(x=factor(Partner), y = round(rate_all,1),fill=factor(Breakdown_Value))) +
geom_bar(stat="identity",position="dodge") +
geom_text(aes(label=paste0(round(rate_all,0),"%"),y=(rate_all+2)),size=4,angle = 45,hjust=0.5,vjust=0,colour="red",position = position_dodge(.9)) +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),axis.text.y=element_blank(),
axis.ticks.y=element_blank(),axis.ticks.x=element_blank(),
text = element_text(size = 10),
axis.text = element_text(size = 10),
axis.title.x = element_text(margin = unit(c(3, 0, 0, 0), "mm")))  +
labs(title="%",y = " ",x="Partner") +
scale_fill_manual(values=cols8) +
guides(fill=guide_legend(title="Age bands"))
ggplotly(by_age_band_chart)
sex_chart_data_full <- filter(allpartners.demographics.clean,Breakdown_Field=="sex")
cols3 <- c("#66c2a5","#fc8d62","#bdbdbd")
by_sex_chart <- ggplot(sex_chart_data_full,
aes(x=factor(Partner), y = round(rate_all,1),fill=factor(Breakdown_Value))) +
geom_bar(stat="identity",position="dodge") +
geom_text(aes(label=paste0(round(rate_all,0),"%"),y=(rate_all+2)),size=4,angle = 45,hjust=0.5,vjust=0,colour="red",position = position_dodge(.9)) +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),axis.text.y=element_blank(),
axis.ticks.y=element_blank(),axis.ticks.x=element_blank(),
text = element_text(size = 10),
axis.text = element_text(size = 10),
axis.title.x = element_text(margin = unit(c(3, 0, 0, 0), "mm")))  +
labs(title="%",y = " ",x="Partner") +
scale_fill_manual(values=cols3) +
guides(fill=guide_legend(title="Sex"))
ggplotly(by_sex_chart)
reason_chart_data <- filter(allpartners.demographics.clean,Breakdown_Field=="reason_shielding")
cols3 <- brewer.pal(n = 3, name = "Set1")
by_reason_chart <- ggplot(reason_chart_data,
aes(x=factor(Breakdown_Value), y = round(rate_all,1),fill=factor(Partner))) +
geom_bar(stat="identity",position="dodge") +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),axis.text.y=element_blank(),
axis.ticks.y=element_blank(),axis.ticks.x=element_blank(),
text = element_text(size = 10),
axis.text = element_text(angle=45,hjust=1,vjust=0.5,size = 15),
axis.title.x = element_text(margin = unit(c(3, 0, 0, 0), "mm")))  +
labs(title="%",y = " ",x="Partner") +
scale_fill_manual(values=cols3) +
guides(fill=guide_legend(title="Reason for shielding"))
ggplotly(by_reason_chart)
reason_chart_data <- filter(allpartners.demographics.clean,Breakdown_Field=="reason_shielding")
cols4 <- brewer.pal(n = 4, name = "Set1")
by_reason_chart <- ggplot(reason_chart_data,
aes(x=factor(Breakdown_Value), y = round(rate_all,1),fill=factor(Partner))) +
geom_bar(stat="identity",position="dodge") +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),axis.text.y=element_blank(),
axis.ticks.y=element_blank(),axis.ticks.x=element_blank(),
text = element_text(size = 10),
axis.text = element_text(angle=45,hjust=1,vjust=0.5,size = 15),
axis.title.x = element_text(margin = unit(c(3, 0, 0, 0), "mm")))  +
labs(title="%",y = " ",x="Partner") +
scale_fill_manual(values=cols3) +
guides(fill=guide_legend(title="Reason for shielding"))
ggplotly(by_reason_chart)
reason_chart_data <- filter(allpartners.demographics.clean,Breakdown_Field=="reason_shielding")
cols4 <- brewer.pal(n = 4, name = "Set1")
by_reason_chart <- ggplot(reason_chart_data,
aes(x=factor(Breakdown_Value), y = round(rate_all,1),fill=factor(Partner))) +
geom_bar(stat="identity",position="dodge") +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),axis.text.y=element_blank(),
axis.ticks.y=element_blank(),axis.ticks.x=element_blank(),
text = element_text(size = 10),
axis.text = element_text(angle=45,hjust=1,vjust=0.5,size = 15),
axis.title.x = element_text(margin = unit(c(3, 0, 0, 0), "mm")))  +
labs(title="%",y = " ",x="Partner") +
scale_fill_manual(values=cols4) +
guides(fill=guide_legend(title="Reason for shielding"))
ggplotly(by_reason_chart)
urbanrural_data_full <- filter(allpartners.demographics.clean,Breakdown_Field=="urbanrural")
cols4 <- brewer.pal(n = 4, name = "Set3")
rural_chart <- ggplot(urbanrural_data_full,
aes(x=factor(Partner), y = round(rate_all,1),fill=factor(Breakdown_Value))) +
geom_bar(stat="identity",position="dodge") +
geom_text(aes(label=paste0(round(rate_all,0),"%"),y=(rate_all+2)),size=4,angle = 45,hjust=0.5,vjust=0,colour="red",position = position_dodge(.9)) +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),axis.text.y=element_blank(),
axis.ticks.y=element_blank(),axis.ticks.x=element_blank(),
text = element_text(size = 10),
axis.text = element_text(size = 10),
axis.title.x = element_text(margin = unit(c(3, 0, 0, 0), "mm")))  +
labs(title="%",y = " ",x="Partner") +
scale_fill_manual(values=cols4) +
guides(fill=guide_legend(title="Urban/rural"))
ggplotly(rural_chart)
deprivation_chart_data_full <- filter(allpartners.demographics.clean,Breakdown_Field=="imd")
cols6 <- c(brewer.pal(n = 5, name = "RdYlGn"),"#bdbdbd")
by_dep_chart <- ggplot(deprivation_chart_data_full,
aes(x=factor(Partner), y = rate_all,fill=factor(Breakdown_Value))) +
geom_bar(stat="identity",position="dodge") +
geom_text(aes(label=paste0(round(rate_all,0),"%"),y=(rate_all+2)),size=4,angle = 45,hjust=0.5,vjust=0,colour="red",position = position_dodge(.9)) +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),axis.text.y=element_blank(),
axis.ticks.y=element_blank(),axis.ticks.x=element_blank(),
text = element_text(size = 10),
axis.text = element_text(size = 10),
axis.title.x = element_text(margin = unit(c(3, 0, 0, 0), "mm")))  +
labs(title="%",y = " ",x="Partner") +
scale_fill_manual(values=cols6) +
guides(fill=guide_legend(title="Deprivation (IMD/SIMD)"))
ggplotly(by_dep_chart)
method_addition_data <- filter(allpartners.demographics.clean,Breakdown_Field=="shielding_list_source") %>%
filter(.,Partner=="GrampianAberdeen")
method_addition_chart <- ggplot(method_addition_data,
aes(x=factor(Partner), y = round(rate_all,1),fill=factor(Breakdown_Value))) +
geom_bar(stat="identity",position="dodge") +
geom_text(aes(label=paste0(round(rate_all,0),"%"),y=(rate_all+2)),size=4,angle = 45,hjust=0.5,vjust=0,colour="red",position = position_dodge(.9)) +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),axis.text.y=element_blank(),
axis.ticks.y=element_blank(),axis.ticks.x=element_blank(),
text = element_text(size = 10),
axis.text = element_text(size = 10),
axis.title.x = element_text(margin = unit(c(3, 0, 0, 0), "mm")))  +
labs(title="%",y = " ",x="Partner") +
guides(fill=guide_legend(title="Method of addition"))
ggplotly(method_addition_chart)
method_addition_data <- filter(allpartners.demographics.clean,Breakdown_Field=="shielding_list_source")
method_addition_chart <- ggplot(method_addition_data,
aes(x=factor(Partner), y = round(rate_all,1),fill=factor(Breakdown_Value))) +
geom_bar(stat="identity",position="dodge") +
geom_text(aes(label=paste0(round(rate_all,0),"%"),y=(rate_all+2)),size=4,angle = 45,hjust=0.5,vjust=0,colour="red",position = position_dodge(.9)) +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),axis.text.y=element_blank(),
axis.ticks.y=element_blank(),axis.ticks.x=element_blank(),
text = element_text(size = 10),
axis.text = element_text(size = 10),
axis.title.x = element_text(margin = unit(c(3, 0, 0, 0), "mm")))  +
labs(title="%",y = " ",x="Partner") +
guides(fill=guide_legend(title="Method of addition"))
ggplotly(method_addition_chart)
method_addition_data <- filter(allpartners.demographics.clean,Breakdown_Field=="shielding_list_source") %>%
filter(.,Partner!="LiverpoolWirral")
method_addition_chart <- ggplot(method_addition_data,
aes(x=factor(Partner), y = round(rate_all,1),fill=factor(Breakdown_Value))) +
geom_bar(stat="identity",position="dodge") +
geom_text(aes(label=paste0(round(rate_all,0),"%"),y=(rate_all+2)),size=4,angle = 45,hjust=0.5,vjust=0,colour="red",position = position_dodge(.9)) +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),axis.text.y=element_blank(),
axis.ticks.y=element_blank(),axis.ticks.x=element_blank(),
text = element_text(size = 10),
axis.text = element_text(size = 10),
axis.title.x = element_text(margin = unit(c(3, 0, 0, 0), "mm")))  +
labs(title="%",y = " ",x="Partner") +
guides(fill=guide_legend(title="Method of addition"))
ggplotly(method_addition_chart)
number_conditions_data <- filter(allpartners.demographics.clean,Breakdown_Field=="number_reasons_shielding")
cols4 <- c(brewer.pal(n = 4, name = "Set3")[1:3],"#bdbdbd")
number_conditions_chart <- ggplot(number_conditions_data,
aes(x=factor(Partner), y = rate_all,fill=factor(Breakdown_Value))) +
geom_bar(stat="identity",position="dodge") +
geom_text(aes(label=paste0(round(rate_all,0),"%"),y=(rate_all+2)),size=4,angle = 45,hjust=0.5,vjust=0,colour="red",position = position_dodge(.9)) +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),axis.text.y=element_blank(),
axis.ticks.y=element_blank(),axis.ticks.x=element_blank(),
text = element_text(size = 10),
axis.text = element_text(size = 10),
axis.title.x = element_text(margin = unit(c(3, 0, 0, 0), "mm")))  +
labs(title="%",y = " ",x="Partner") +
scale_fill_manual(values=cols4) +
guides(fill=guide_legend(title="Number of conditions"))
ggplotly(number_conditions_chart)
sex_imd_data_full <- filter(allpartners.demographics.clean,Breakdown_Field=="imd_sex"&
var2.level!="unknown/other")
by_sex_imd_chart <- ggplot(sex_imd_data_full,
aes(x=factor(var1.level),
y = round(interaction_rate_v1,1),
fill=factor(var2.level))) +
facet_wrap(~ Partner) +
geom_bar(stat="identity",position="dodge") +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),axis.text.y=element_blank(),
axis.ticks.y=element_blank(),axis.ticks.x=element_blank(),
text = element_text(size = 10),
axis.text = element_text(size = 10),
axis.title.x = element_text(margin = unit(c(3, 0, 0, 0), "mm"))) +
labs(title=" ",y = " ",x="IMD/SIMD quintile") +
guides(fill=guide_legend(title="Sex"))
ggplotly(by_sex_imd_chart)
age_imd_data_full <- filter(allpartners.demographics.clean,Breakdown_Field=="age_band_imd") %>%
filter(.,var1.level %in% c("0-19","20-29","30-39","40-49","50-59","60-69","70-79","80+"))
cols6 <- c(brewer.pal(n = 5, name = "RdYlGn"),"#bdbdbd")
imd_age_chart <- ggplot(age_imd_data_full,
aes(x=factor(var1.level),
y = round(interaction_rate_v1,1),
fill=factor(var2.level))) +
facet_wrap(~ Partner) +
geom_bar(stat="identity",position="dodge") +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),axis.text.y=element_blank(),
axis.ticks.y=element_blank(),axis.ticks.x=element_blank(),
text = element_text(size = 10),
axis.text = element_text(size = 10),
axis.title.x = element_text(margin = unit(c(3, 0, 0, 0), "mm"))) +
labs(title=" ",y = " ",x="Age group") +
scale_fill_manual(values=cols6) +
guides(fill=guide_legend(title="IMD/SIMD quintile"))
ggplotly(imd_age_chart)
reason_imd_data_full <- filter(allpartners.demographics.clean,Breakdown_Field=="imd_shielding_reason") %>%
filter(.,var2.level!="unknown")
reason_imd_chart <- ggplot(reason_imd_data_full,
aes(x=factor(var1.level),
y = round(interaction_rate_v1,1),
fill=factor(var2.level))) +
facet_wrap(~ Partner) +
geom_bar(stat="identity",position="dodge") +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),axis.text.y=element_blank(),
axis.ticks.y=element_blank(),axis.ticks.x=element_blank(),
text = element_text(size = 10),
axis.text = element_text(size = 10),
axis.title.x = element_text(margin = unit(c(3, 0, 0, 0), "mm"))) +
labs(title=" ",y = " ",x="IMD/SIMD quintile")  +
guides(fill=guide_legend(title="Reason for shielding"))
ggplotly(reason_imd_chart)
reason_age_data_full <- filter(allpartners.demographics.clean,Breakdown_Field=="shielding_reason_age_band"&
var1.level!="unknown"&var2.level!="unknown")
reason_age_chart <- ggplot(reason_age_data_full,
aes(x=factor(var2.level),
y = round(interaction_rate_v2,1),
fill=factor(var1.level))) +
facet_wrap(~ Partner) +
geom_bar(stat="identity",position="dodge") +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),axis.text.y=element_blank(),
axis.ticks.y=element_blank(),axis.ticks.x=element_blank(),
text = element_text(size = 10),
axis.text = element_text(size = 10),
axis.title.x = element_text(margin = unit(c(3, 0, 0, 0), "mm"))) +
labs(title=" ",y = " ",x="Age")  +
guides(fill=guide_legend(title="Reason for shielding"))
ggplotly(reason_age_chart)
sex_age_data_full <- filter(allpartners.demographics.clean,Breakdown_Field=="age_band_sex"&
var2.level!="unknown/other"&
var1.level!="unknown")
cols8 <- brewer.pal(n = 9, name = "BuPu")[2:9]
sex_age_chart <- ggplot(sex_age_data_full,
aes(x=factor(var2.level),
y = round(interaction_rate_v2,1),
fill=factor(var1.level))) +
facet_wrap(~ Partner) +
geom_bar(stat="identity",position="dodge") +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),axis.text.y=element_blank(),
axis.ticks.y=element_blank(),axis.ticks.x=element_blank(),
text = element_text(size = 10),
axis.text = element_text(size = 10),
axis.title.x = element_text(margin = unit(c(3, 0, 0, 0), "mm"))) +
labs(title=" ",y = " ",x="Sex") +
guides(fill=guide_legend(title="Age")) +
scale_fill_manual(values=cols8)
ggplotly(sex_age_chart)
